export declare const sourceTypeEnum: import("drizzle-orm/pg-core").PgEnum<["YOUTUBE", "TEXT", "AUDIO", "PDF", "IMAGE"]>;
export declare const processingStatusEnum: import("drizzle-orm/pg-core").PgEnum<["PENDING", "PROCESSING", "COMPLETED", "FAILED"]>;
export declare const sources: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "sources";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "sources";
            dataType: "number";
            columnType: "PgSerial";
            data: number;
            driverParam: number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "sources";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sourceType: import("drizzle-orm/pg-core").PgColumn<{
            name: "source_type";
            tableName: "sources";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "YOUTUBE" | "TEXT" | "AUDIO" | "PDF" | "IMAGE";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["YOUTUBE", "TEXT", "AUDIO", "PDF", "IMAGE"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        originalUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "original_url";
            tableName: "sources";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        originalFilename: import("drizzle-orm/pg-core").PgColumn<{
            name: "original_filename";
            tableName: "sources";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        originalStoragePath: import("drizzle-orm/pg-core").PgColumn<{
            name: "original_storage_path";
            tableName: "sources";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        processingStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_status";
            tableName: "sources";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "PENDING" | "PROCESSING" | "COMPLETED" | "FAILED";
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["PENDING", "PROCESSING", "COMPLETED", "FAILED"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        processingStage: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_stage";
            tableName: "sources";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        processingError: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_error";
            tableName: "sources";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        extractedText: import("drizzle-orm/pg-core").PgColumn<{
            name: "extracted_text";
            tableName: "sources";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        metadata: import("drizzle-orm/pg-core").PgColumn<{
            name: "metadata";
            tableName: "sources";
            dataType: "json";
            columnType: "PgJson";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "sources";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "sources";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const sourcesRelations: import("drizzle-orm").Relations<"sources", {
    user: import("drizzle-orm").One<"users", true>;
    note: import("drizzle-orm").One<"notes", true>;
    visuals: import("drizzle-orm").Many<"visuals">;
}>;
